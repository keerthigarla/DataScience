import PyPDF2
import pandas as pd
import os
import re
import time

from selenium import webdriver
import selenium.webdriver.chrome.service as service

import time

from selenium import webdriver
import selenium.webdriver.chrome.service as service

# your executable path is wherever you saved the chrome webdriver
chromedriver = "C:\\Users\\MITTKE5\\Downloads\\chromedriver.exe"
browser = webdriver.Chrome(executable_path=chromedriver)


browser.get('https://gsd.com/operations/ncas/nfhistoricalinvoices.do#_undefined_undefined_back')
#browser.get('https://vecrm.verizon.com/vecrm/dashboard/index.jsp')
time.sleep(10) # Let the user actually see something!

BAN = browser.find_element_by_id("accountId") 
BAN.send_keys("Y2449872")


#submitButton = browser.find_element_by_onclick("BILL_ACCTSRCH.acctSearchRV('INT',event)") 
button1 = browser.find_element_by_xpath('//a[@href="javascript:void(0)"]')
button1.click()
time.sleep(5)


browser.find_element_by_link_text("View Document Details").click()
time.sleep(5)

browser.find_element_by_link_text("2018 Jun").click()
time.sleep(5)






########Actual Code:###########

import PyPDF2
import pandas as pd
import os
import re
path = "C:/Users/MITTKE5/Downloads/"
#"C:/Users/MITTKE5/Desktop/hackathon/Invoices/"
print(os.listdir(path))
files = []
contents = []
info=[]
BAN=[]
SerID = []
ckt=[]
prod =[]
prod_fe=[]
IDate = []
SP = []
loc = []
for file in os.listdir(path):
    if file.endswith(".pdf"):
        file = path+file
        print(file)
        pdf_file = open(file, 'rb')
        pdfReader = PyPDF2.PdfFileReader(pdf_file)
        number_of_pages = pdfReader.getNumPages()
        for i in range(0, pdfReader.numPages):
            pageObj = pdfReader.getPage(i)
            page_content = pageObj.extractText()
            data = page_content.encode()
            #print(file, page_content)
            #print(page_content)
            pageObj0 = pdfReader.getPage(0)
            page_content0 = pageObj.extractText()    
            info.append(page_content0)
            if 'Data Services Summary by Account' in page_content:
                a= page_content.replace('\n', ' ').replace('\r', '')
                contents.append(a)
                files.append(file) 
                if 'Bill Payer' in page_content:
                    BAN.append(page_content[page_content.find('Payer')+ 5: page_content.find('Node')])
                if 'Account Number' in page_content:
                    SerID.append((page_content[page_content.find('Account Number')+ 14: page_content.find('__')-1]).replace('\n', ' '))
                if 'Circuit ID' in page_content:
                    ckt.append((page_content[a.find('Circuit ID:')+ 11: a.find('Service Period')]).replace('\n', ' '))
                if 'Total' in page_content:
                    prod.append(((page_content[a.find('Total _')+ 179: a.find('Circuit ID')]).replace('\n\n', ',')).replace('\n', ' '))
                if 'Invoice Date' in page_content:
                    IDate.append(page_content[a.find('Invoice Date')+ 12: a.find('Invoice Date')+ 25])
                if 'Invoice Number' in page_content:
                    loc.append(page_content[a.find('Invoice Number')+ 27: a.find('Invoice Date')]+ page_content[a.find('Invoice Date')+ 24: a.find('Page Number')] )    
               
print('rows:', int(len(files))) 
index1 = []
for i in range(int(len(files))):
    index1.append(i)
#print(contents)
df2 = pd.DataFrame({'file_name': files, 'file_info':contents, 'BAN': BAN, 'ServiceID': SerID,  'Cir ID': ckt, 'Product': prod, 'InvoiceDate': IDate, 'Location': loc}, index=index1)
df2.head()   


browser.find_element_by_link_text("View").click()
time.sleep(5)


from selenium.webdriver.support.wait import WebDriverWait

# wait to make sure there are two windows open
WebDriverWait(browser, 10).until(lambda d: len(d.window_handles) == 2)

# switch windows
browser.switch_to_window(browser.window_handles[1])

# wait to make sure the new window is loaded
WebDriverWait(browser, 10).until(lambda d: d.title != "")

time.sleep(2)

browser.find_element_by_link_text("Save").click()
time.sleep(10)

browser.find_element_by_link_text("Close").click()
time.sleep(5)


df2.to_csv("multiple_pdf_scrapingker.csv", index=False)

import cx_Oracle
import re
from pandas.io import sql

import cx_Oracle
dsn_tns = cx_Oracle.makedsn('uiifdtd5scan.ebiz.verizon.com', 1800, 'eztstC')
print(dsn_tns)
#tns = '(DESCRIPTION=(ADDRESS= (PROTOCOL=TCP)(HOST=uiifdtd5scan.ebiz.verizon.com)(PORT=1800)  )(CONNECT_DATA= (SERVER=dedicated) (SERVICE_NAME=eztstC)   )  )'
con = cx_Oracle.connect('stager', 'temp','uiifdtd5scan.ebiz.verizon.com:1800/eztstC')
print(con.version)
#con.close()
#la_da14.to_sql("Loan_Apr_Stats", conn, if_exists="replace")
#la_data.to_sql("Loan_Apr_Stats", conn, if_exists="append")
#la_da1213.to_sql("Loan_Apr_Stats", conn, if_exists="append")
#la_da15.to_sql("Loan_Apr_Stats", conn, if_exists="append")

#df = pd.read_sql_query("select issue_d,  strftime('%Y', issue_d) as Issue_Year  from Loan_Apr_Stats ;", conn)
query = '''select    
 term,  grade
from Stats as lo where substr(issue_d,5,8) between ? and ? and status <> ?;'''
start = '2007'
end = '2015'
status = 'Current'
df_train = pd.read_sql_query(query, conn, params=(start, end, status))
#df = pd.read_sql_query(query, conn)
df_train.isnull().sum()
#df.columns
df_train.describe()
